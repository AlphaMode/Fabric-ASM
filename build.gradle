plugins {
	id "fabric-loom" version "1.1.+"
	id "maven-publish"
}

sourceCompatibility = 17
targetCompatibility = 17

archivesBaseName = "Manningham Mills"
version = "2.4"

dependencies {
	minecraft "com.mojang:minecraft:1.19.4"
	mappings loom.officialMojangMappings()
	modImplementation("net.fabricmc:fabric-loader:0.14.19")
}

sourceSets {
	main {
		java {
			srcDir 'src'
		}
		resources {
			srcDir 'resources'
		}
	}
	example {
		compileClasspath += main.compileClasspath + main.output
		annotationProcessorPath = main.annotationProcessorPath
		java {
			srcDir 'example/src'
		}
		resources {
			srcDir 'example/resources'
			exclude "access-transformations.txt"
		}
	}
}

task exampleJar(type: Jar, dependsOn: exampleClasses) {
	archiveClassifier = "example"
	from sourceSets.example.output
}

task sourcesJar(type: Jar, dependsOn: classes) {
	archiveClassifier = "sources"
	from sourceSets.main.allSource
}

task exampleSourcesJar(type: Jar, dependsOn: exampleClasses) {
	archiveClassifier = "example-sources"
	from sourceSets.example.allSource
}

build.dependsOn exampleJar, exampleSourcesJar

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"

	it.options.release = 17
}


processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${base.archivesName.get()}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(exampleJar) {
				builtBy exampleJar
			}
			artifact(sourcesJar) {
				builtBy sourcesJar
			}
			artifact(exampleSourcesJar) {
				builtBy exampleSourcesJar
			}
		}
	}
}
